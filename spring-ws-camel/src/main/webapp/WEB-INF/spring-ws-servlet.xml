<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- === Route(s) ==== -->
    <camel:camelContext id="camelContext">
        <camel:routeBuilder ref="applyRegistrationRoute"/>
    </camel:camelContext>

    <bean id="applyRegistrationRoute" class="nl.han.dare2date.service.web.applyregistration.ApplyRegistrationRoute">
        <constructor-arg ref="simpleDao"/>
    </bean>

    <bean id="simpleDao" class="nl.han.dare2date.service.dao.SimpleDao"/>

    <!--This bean gets used to create EntityManagers which can be used for Repositories/DAOs-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="calculator"/>
    </bean>
    <!--This bean gets used to manage the transactions inside the EntityManagers, without it data would not get saved as transactions are never flushed-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- === Endpoint mapping(s) ==== -->
    <bean id="applyRegistrationEndpointMapping" class="org.apache.camel.component.spring.ws.bean.CamelEndpointMapping">
        <property name="interceptors">
            <list>
                <ref local="applyRegistrationValidatingInterceptor"/>
                <ref local="loggingInterceptor"/>
            </list>
        </property>
    </bean>

    <!-- === Interceptors ==== -->
    <bean id="loggingInterceptor" class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>

    <bean id="applyRegistrationValidatingInterceptor"
          class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
        <property name="schema" value="/WEB-INF/applyregistrationservice/applyregistration.xsd"/>
        <property name="validateRequest" value="true"/>
        <property name="validateResponse" value="true"/>
    </bean>

    <!-- === WSDL exposure ==== -->
    <bean id="applyregistration" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schema">
            <bean id="applyregistration_xsd" class="org.springframework.xml.xsd.SimpleXsdSchema">
                <property name="xsd" value="/WEB-INF/applyregistrationservice/applyregistration.xsd"/>
            </bean>
        </property>
        <property name="portTypeName" value="applyregistration"/>
        <property name="locationUri" value="http://localhost:8080/applyregistration"/>
    </bean>

    <!--
        === ACTIVEMQ CONNECTOR ====
        Make sure ActiveMQ is running when you run this base project
    -->
    <bean id="activemq"
          class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>
</beans>
